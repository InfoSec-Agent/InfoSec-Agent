name: Lint Backend
on:
  push:
    branches:
      - main
    paths:
      - '**/*.go'
      - '.github/workflows/**' 
  pull_request:
    branches:
      - main
    paths:
      - '**/*.go'
      - '.github/workflows/**' 

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: Allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  golangci:
    name: Linting
    runs-on: windows-latest
    env:
      GO111MODULE: on
      CGO_ENABLED: 1
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.0'
      - name: Make lint result directory
        run: mkdir linting
      - name: Make dummy file for reporting-page linting
        run: New-Item -Force reporting-page/frontend/dist/index.html
      - name: Setup Go workspace
        run: ./setup_go_work.bat
      - name: Run linter on InfoSec-Agent backend
        uses: golangci/golangci-lint-action@v4
        with:
          # Require: The version of golangci-lint to use.
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: linting

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          args: --out-format=json:linting/lint-report-InfoSec-Agent.json,colored-line-number,github-actions

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: false

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          skip-cache: false

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          skip-pkg-cache: false

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          skip-build-cache: false

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"
      - name: Run linter on reporting-page backend
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

          working-directory: reporting-page
          args: --out-format=json:../linting/lint-report-reporting-page.json,colored-line-number,github-actions
          
          only-new-issues: false
          
          skip-cache: false
          skip-pkg-cache: false
          skip-build-cache: false
        if: always()
      - name: Upload linter output as artifact
        uses: actions/upload-artifact@v2
        with:
          name: golangci-lint-output
          path: ${{ github.workspace }}/linting
        if: always()